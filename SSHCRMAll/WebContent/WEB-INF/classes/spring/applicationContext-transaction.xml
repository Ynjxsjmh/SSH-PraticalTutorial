<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 依赖sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 事务控制（增强） -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 事务定义信息 
		rollback-for：默认是RuntimeException，才去回滚
		-->
		<tx:attributes>
			
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<!-- aop配置 -->
	<aop:config> 
		<!--pointcut的配置必须找到对应的service即目标对象，影响 是否能够生成代理对象  -->
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.atcast.service.impl.*.*(..))"/>
	</aop:config>
	
	
</beans>