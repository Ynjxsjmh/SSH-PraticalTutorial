* About
This a repo to store the SSH projects my teacher taught me.

* Environment
- jdk 1.7 or jdk 1.8
- apache-tomcat-7.0.57
- MySQL
- Eclipse

To run the project I offered, you need to add tomcat lib jar files to the existing projects. Steps to do that are =Right click on your project name -> Build Path -> Configure Build Path -> Tab *Libraries* -> Add Library -> Server Run Time -> Apache Tomcat= ã€‚

Then you should modify the MySQL password.

I only track the core code in the project so that the project cloned to your computer possiblily couldn't run.

* File Info
** Hibernate
=HibernateCRM01= just realises the addition of customer.

=HibernateCRM02= implements the customer list on the basis of HibernateCRM01

=HibernateDemo01= has some examples on how to write mapping files.

=HibernateCRM03= adds the management of Customer and Linkman using HibernateDemo01's knowledge point.

=HibernateDemo02= introduces object's status, query and cache.

=HibernateCRMHqlQbc= is what it's name describes.

=HibernateCRMReference= is the final Hibernate CRM project.

** Struts2
=Struts2SimplestDemo= is just a project with pure Struts2. If you understand this demo, you can grasp half of the knowledge of Struts2.

=Struts2CRM01= uses Structs2 serves as control layer and Hibernate serves as persistence layer. It implements the login function of CRM.

=Struts2Demo01= , =Struts2Demo02= , =Struts2Demo03= are three ways to encapsulation data.

=Struts2DemoInterceptor= is an example on Struts2's interceptor.

=Struts2OGNL= is an OGNL and ValueStack project.

=Struts2DemoLoginRegister= shows how login and register works. Note that there is no database connection, so it doesn't complete read or write data via database. Login username and password both are 'tom', you can rewrite it if you like.

=Struts2CRM02= completes add user function.

** Spring
=SpringDemo01= uses Spring and mainly tells how object is created in Spring.

=SpringDemo02= shows some demos on proxy pattern and AOP programming.

=SpringDemo03= is the three implements of declarative transaction control.

In =SpringHibernate01= , SessionFactory in Hibernate is created by Spring.

In =SpringHibernate02= , transaction in Hibernate is handed over to Spring's declarative transaction.

=SpringCRM01= is an easy project which combines Spring and Struts.

** SSH
=SpringCRM02= is the initial intergration of the SSH framework. Don't be fooled by it's name. It only implements add customer function.

Note that all the =SpringDemo*= are Java projects, you also need to import the all the jars in =lib= folder to the project by following =Right click on your project name -> Build Path -> Configure Build Path -> Tab *Libraries* -> Add JARs -> Choose all the jars in your project's lib folder= 